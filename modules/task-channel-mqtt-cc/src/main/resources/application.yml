debug: false
server:
  port: 8088
management:
  endpoints:
    web:
      exposure:
        include: "health,metrics"
spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKER_ENDPOINT}
      bindings:
        controlComponentRequests:
          destination: control-component-requests
          content-type: application/*+avro
          binder: kafka-avro
          producer:
            useNativeEncoding: true
        controlComponentResponses-in-0:
          destination: control-component-responses
          content-type: application/*+avro
          binder: kafka-avro
          consumer:
            useNativeDecoding: true
      binders:
        #kafka-json:
        #  type: kafka
        kafka-avro:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      producer-properties:
                        key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                        #key.deserializer: org.apache.kafka.common.serialization.StringSerializer
                        value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                        schema.registry.url: ${SCHEMA_REGISTRY_ENDPOINT}
                      consumer-properties:
                        key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                        #key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                        value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                        schema.registry.url: ${SCHEMA_REGISTRY_ENDPOINT}
                        specific.avro.reader: true
mqtt:
  automaticReconnect: true
  cleanSession: true
  connectionTimeout: 10
  clientId: mqtt-task-channel
  hostname: ${KAFKA_BROKER_ENDPOINT}
  port: 1883
basys:
  mqtt-to-kafka-bridge:
    name: test
    bridges:
      statusSafetyLightCurtain:
        source: basysafe/safetylightcurtain/status
        target: basysafe/safetylightcurtain/status
        transformerService: safetyLightCurtainStatusTransformer
      statusSignalColumn:
        source: basysafe/signalcolumn/status
        target: basysafe/signalcolumn/status
        transformerService: signalColumnStatusTransformer
      statusInitiator:
        source: basysafe/initiator/status
        target: basysafe/initiator/status
        transformerService: initiatorStatusTransformer
      statusEstopButton:
        source: basysafe/estopbutton/status
        target: basysafe/estopbutton/status
        transformerService: estopButtonStatusTransformer
      statusAckButton:
        source: basysafe/ackbutton/status
        target: basysafe/ackbutton/status
        transformerService: ackButtonStatusTransformer
      statusPress:
        source: basysafe/press/status
        target: basysafe/press/status
        transformerService: pressStatusTransformer
